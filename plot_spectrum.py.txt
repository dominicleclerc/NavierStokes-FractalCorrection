import numpy as np
import matplotlib.pyplot as plt

# --- Load velocity fields from simulation ---
u = np.load("u_final.npy")
v = np.load("v_final.npy")

# --- FFT of velocity fields ---
u_hat = np.fft.fft2(u)
v_hat = np.fft.fft2(v)
u_hat = np.fft.fftshift(u_hat)
v_hat = np.fft.fftshift(v_hat)

# --- Compute energy spectrum ---
N = u.shape[0]
kx = np.fft.fftfreq(N, d=1.0/N)
ky = np.fft.fftfreq(N, d=1.0/N)
kx = np.fft.fftshift(kx)
ky = np.fft.fftshift(ky)
KX, KY = np.meshgrid(kx, ky)
Kmag = np.sqrt(KX**2 + KY**2)

E_spectrum = 0.5 * (np.abs(u_hat)**2 + np.abs(v_hat)**2)

# Bin energy by wavenumber shell
k_bins = np.arange(0.5, N//2, 1.0)
E_avg = np.zeros_like(k_bins)

for i, k in enumerate(k_bins):
    mask = (Kmag >= k - 0.5) & (Kmag < k + 0.5)
    E_avg[i] = np.sum(E_spectrum[mask])

# --- Plot ---
plt.figure(figsize=(8, 4))
plt.loglog(k_bins, E_avg, label="Energy Spectrum")
plt.xlabel("Wavenumber |k|")
plt.ylabel("E(k)")
plt.title("Angularly Averaged Energy Spectrum")
plt.grid(True, which='both')
plt.tight_layout()
plt.savefig("figure2_energy_spectrum.png", dpi=300)
plt.show()


   


